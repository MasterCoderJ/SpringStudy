<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 개발자가 HandlerMapping을 등록하지 않으면 defaultHandlerMapping이 적용되어짐
		DefaultAnnotationHandlerMapping: xml설정 파일을 간소화 시키기 위해 더이상, bean들의 매핑을 xml에서 하기보다는
		자바 5버전 부터 지원하는 Annotation위주로 한다 
		@어노테이션(주석이지만 프로그램에서 사용되는 주석)
	 -->
	 
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- 정적자원(html,css,js,iamge등등)을 컨트롤러 매핑에 의하지 않고 단순 링크만으로도 접근가능하게 하기 -->
	<resources mapping="/resources/**" location="/resources/"/>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- @가 붙은 즉 스프링의 컴포넌트의 대상이 되는 객체는 전부 찾아서 인스턴스를 생성해준다 -->
	<context:component-scan base-package="com.edu.mvc3.controller"/>
	
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSizePerFile" value="3145728"/>
	</beans:bean>	
	
	
</beans:beans>

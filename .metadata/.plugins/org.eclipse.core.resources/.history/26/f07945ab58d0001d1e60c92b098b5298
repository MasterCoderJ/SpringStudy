package com.edu.wepet.client.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.edu.wepet.domain.Holiday;
import com.edu.wepet.exception.HolidayException;
import com.edu.wepet.model.holiday.HolidayService;
import com.edu.wepet.util.Message;
import com.fasterxml.jackson.databind.util.JSONPObject;

@RestController
@RequestMapping("/rest")
public class RestSitterController {
	
	@Autowired
	private HolidayService holidayService;

	private Logger logger=LoggerFactory.getLogger(this.getClass());
	
	
	@GetMapping("/holiday")
	public List<Holiday> getList(HttpServletRequest request){
		
		List registedHolidayList= holidayService.selectAll();
		
		logger.info("registedHolidayList"+registedHolidayList);
		
		return holidayService.selectAll();
		
	}
	
	@DeleteMapping("/deleteHoliday")
	public ResponseEntity<Message> deleteHoliday(HttpServletRequest request, Holiday holiday){
//		
//		holidayService.delete(holiday);
//		
		logger.info("holiday"+ holiday);
		Message message= new Message();
		message.setMsg("휴무 삭제");
		
		ResponseEntity entity= new ResponseEntity<Message>(message, HttpStatus.OK);
		
		return entity;

	}
	
	
	//홀리데이 받기 
	@PostMapping("/holiday")
	public ResponseEntity<Message> registHoliday(HttpServletRequest request, @RequestBody List<Holiday> holidayList){
		
		logger.info("holidayList에 등록전 "+holidayList);
		
		holidayService.insert(holidayList);
		
		Message message= new Message();
		message.setMsg("휴무등록완료");
		
		ResponseEntity entity= new ResponseEntity<Message>(message, HttpStatus.OK);
		
		return entity;
	}
		
	
	@ExceptionHandler(HolidayException.class)
	public ResponseEntity<Message> handle(HolidayException e){
		
		Message message= new Message();
		message.setMsg(e.getMessage());
		
		ResponseEntity entity= new ResponseEntity<Message>(message, HttpStatus.BAD_REQUEST);
		
		return entity;

	}


}
